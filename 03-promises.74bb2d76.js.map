{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACZC,KAAMC,SAASC,cAAc,SAC7BC,SAAUF,SAASC,cAAc,uBAChCE,QAASH,SAASC,cAAc,sBAChCG,UAAWJ,SAASC,cAAc,wBAClCI,OAAQL,SAASC,cAAc,0BAGzBK,EAA+CR,EAA/CC,KAAMQ,EAAyCT,EAAzCI,SAAUM,EAA+BV,EAA/BK,QAASM,EAAsBX,EAAtBM,UAsBjC,SAASM,EAAcC,EAAUC,GAchC,OAbiB,IAAIC,SAAQ,SAACC,EAAKC,GAClC,IAAMC,EAAgBC,KAAKC,SAAW,GACrCC,YAAW,WACNH,EAEHF,EAAI,CAAEH,WAAUC,UAGhBG,EAAI,CAAEJ,WAAUC,S,GAEfA,E,IAjCiDd,EAAXO,OAErCe,iBAAiB,SAExB,SAAiBC,GAChBA,EAAIC,iBACJ,IAAK,IAAIC,EAAI,EAAGA,EAAId,EAAUe,MAAOD,GAAO,EAAG,CAC9C,IAAME,EAAWF,EAAI,EACfG,EAAQC,OAAOpB,EAASiB,OAASG,OAAOnB,EAAQgB,OAASD,EAC/Db,EAAce,EAAUC,GACtBE,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBkB,EAAAlC,GAASmC,OAAOC,QAAQ,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAGtEsB,OAAM,SAAAL,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACnBkB,EAAAlC,GAASmC,OAAOI,QAAQ,sBAAqCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAItEN,EAAK8B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n\tform: document.querySelector('.form'),\n\tdelayVal: document.querySelector('input[name=\"delay\"]'),\n  stepVal: document.querySelector('input[name=\"step\"]'),\n  amountVal: document.querySelector('input[name=\"amount\"]'),\n  submit: document.querySelector('button[type=\"submit\"]'),\n};\n\nconst { form, delayVal, stepVal, amountVal, submit } = refs;\n\nsubmit.addEventListener('click', onClick);\n\nfunction onClick(evt) {\n\tevt.preventDefault();\n\tfor (let i = 0; i < amountVal.value; i = i +1) {\n\t\tconst position = i + 1;\n\t\tconst delay = Number(delayVal.value) + Number(stepVal.value) * i;\t\t\n\t\tcreatePromise(position, delay)\n\t\t\t.then(({ position, delay }) => {\n\t\t\t\tNotiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n\t\t\t})\n\t\t\t.catch(({ position, delay }) => {\n\t\t\t\tNotiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`\n        );\n\t\t\t});\n\t}\n\tform.reset();\n}\n\nfunction createPromise(position, delay) {\t\n\t\tconst promise = new Promise((res, rej) => {\n\t\tconst shouldResolve = Math.random() > 0.3;\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (shouldResolve) {\n\t\t\t\t\t// Fulfill\n\t\t\t\t\tres({ position, delay });\n\t\t\t\t} else {\n\t\t\t\t\t// Reject\n\t\t\t\t\trej({ position, delay });\n\t\t\t\t}\n\t\t\t}, delay\n\t\t\t);\n\t});\n\treturn promise;\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delayVal","stepVal","amountVal","submit","$ce04d3a99e08e73b$var$form","$ce04d3a99e08e73b$var$delayVal","$ce04d3a99e08e73b$var$stepVal","$ce04d3a99e08e73b$var$amountVal","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","res","rej","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","i","value","position1","delay1","Number","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.74bb2d76.js.map"}